#+TITLE: Amazon SQS
#+AUTHOR: Elliot Penson

Amazon SQS is a web service that gives you access to a message queue that can be
used to store messages while waiting for a computer to process them. Amazon SQS
is a distributed queue system that enables web service applications to quickly
and reliably queue messages that one component in the application generates to
be consumed by another component. This queue is a temporary repository for
messages that are awaiting processing.

Using Amazon SQS, you can decouple the components of an application so they run
independently, with Amazon SQS easing message management between components. Any
component of a distributed application can store messages in a fail-safe
queue. Messages contain up to 256 KB of text in any format. Any component can
later retrieve the messages programmatically using the Amazon SQS API.

The queue acts as a buffer between the component producing and saving data, and
the component receiving the data for processing. This means the queue resolves
issues that arise if the producer is producing work faster than the consumer can
process it, or if the producer or consumer are only intermittently connected to
the network.

* Key Facts
  
  - SQS is a pull-based system. SNS is a push-based system.
  - Messages are 256 KB in size.
  - Messages can be kept in the queue from 1 minute to 14 days. The default is 4
    days.
  - SQS guarantees that your message will be processed at least once.
  
* Queue Types
  
** Standard Queues
   
   Amazon SQS offers standard as the default queue type. A standard queue lets
   you have a nearly-unlimited number of transactions per second. Standard queues
   guarantee that a message is delivered at least once. However, occasionally
   (because of the highly-distributed architecture that allows high throughput),
   more than one copy of a message might be delivered out of order. Standard
   queues provide best-effort ordering which ensures that messages are generally
   delivered in the same order as they are sent.
   
** FIFO Queues
   
   The FIFO queue complements the standard queue. The most important features of
   this queue type are FIFO (first-in-first-out) delivery and exactly-once
   processing: The order in which messages are sent and received is strictly
   preserved and a message is delivered once and remains available until a
   consumer processes and deletes it; duplicates are not introduced into the
   queue. FIFO queues also support message groups that allow multiple ordered
   message groups within a single queue. FIFO queues are limited to 300
   transactions per second (TPS), but have all the capabilities of standard
   queues.

* Visibility Timeout
  
  *Visibility Timeout* is the amount of time that the message is invisible in
  the SQS queue after a reader picks up that message. Provided the job is
  processed before the visibility timeout expires, the message will then be
  deleted from the queue. If the job is not processed within that time, the
  message will become visible again and another reader will process it. This
  could result in the same message being delivered twice.
 
  The default Visibility Timeout is 30 seconds. The maximum Visibility Timeout
  is 12 hours.

* Long Polling

  SQS Long Polling is a way to retrieve messages from your SQS queues. While the
  regular short polling returns immediately, even if the message queue being
  polled is empty, long polling doesn't return a response until a message
  arrives in the message queue, or the long poll times out. This helps you save
  money.
  
